\documentclass[journal]{vgtc}                % final (journal style)
%\documentclass[review,journal]{vgtc}         % review (journal style)
%\documentclass[widereview]{vgtc}             % wide-spaced review
%\documentclass[preprint,journal]{vgtc}       % preprint (journal style)
%\documentclass[electronic,journal]{vgtc}     % electronic version, journal

%% Uncomment one of the lines above depending on where your paper is
%% in the conference process. ``review'' and ``widereview'' are for review
%% submission, ``preprint'' is for pre-publication, and the final version
%% doesn't use a specific qualifier. Further, ``electronic'' includes
%% hyperreferences for more convenient online viewing.

%% Please use one of the ``review'' options in combination with the
%% assigned online id (see below) ONLY if your paper uses a double blind
%% review process. Some conferences, like IEEE Vis and InfoVis, have NOT
%% in the past.

%% Please note that the use of figures other than the optional teaser is not permitted on the first page
%% of the journal version.  Figures should begin on the second page and be
%% in CMYK or Grey scale format, otherwise, colour shifting may occur
%% during the printing process.  Papers submitted with figures other than the optional teaser on the
%% first page will be refused.

%% These three lines bring in essential packages: ``mathptmx'' for Type 1
%% typefaces, ``graphicx'' for inclusion of EPS figures. and ``times''
%% for proper handling of the times font family.
\usepackage{natbib}
\usepackage{mathptmx}
\usepackage{graphicx}
\usepackage{times}

%% We encourage the use of mathptmx for consistent usage of times font
%% throughout the proceedings. However, if you encounter conflicts
%% with other math-related packages, you may want to disable it.

%% This turns references into clickable hyperlinks.
\usepackage[bookmarks,backref=true,linkcolor=black]{hyperref} %,colorlinks
\hypersetup{
  pdfauthor = {},
  pdftitle = {},
  pdfsubject = {},
  pdfkeywords = {},
  colorlinks=true,
  linkcolor= black,
  citecolor= black,
  pageanchor=true,
  urlcolor = black,
  plainpages = false,
  linktocpage
}

%% If you are submitting a paper to a conference for review with a double
%% blind reviewing process, please replace the value ``0'' below with your
%% OnlineID. Otherwise, you may safely leave it at ``0''.
\onlineid{0}

%% declare the category of your paper, only shown in review mode
\vgtccategory{Research}

%% allow for this line if you want the electronic option to work properly
\vgtcinsertpkg

%% In preprint mode you may define your own headline.
%\preprinttext{To appear in an IEEE VGTC sponsored conference.}

%% Paper title.

\title{Animint: a Grammar for Interactive Animations}

%% This is how authors are specified in the journal style

%% indicate IEEE Member or Student Member in form indicated below
\author{Toby Dylan Hocking and Susan VanderPlas}
\authorfooter{
%% insert punctuation at end of each item
\item
 Toby Dylan Hocking is with McGill Human Genetics. E-mail: toby.hocking@mail.mcgill.ca.
\item
 Susan VanderPlas is with Iowa State Statistics. E-mail: srvanderplas@gmail.com.
}

%other entries to be set up for journal
\shortauthortitle{Hocking \MakeLowercase{\textit{et al.}}: Animint: a
  Grammar for Interactive Animations}
%\shortauthortitle{Firstauthor \MakeLowercase{\textit{et al.}}: Paper Title}

%% Abstract section.
\abstract{Animint is a novel high-level domain-specific language (DSL)
  for linked, interactive, animated plots. It builds on top of
  previous work on the grammar of graphics (ggplot2 in R) and
  interactive visualization using web standards (D3 in JavaScript). In
  other data visualization systems, interactive animations are
  difficult to accomplish, since they must be defined in terms of
  low-level operations and sometimes 100s of lines of code. In
  contrast, Animint's high-level DSL can be used to produce a wide
  variety of complex visualizations with only 10s of lines of code. It
  works by adding 2 new aesthetics to the grammar of graphics:
  \texttt{clickSelects}, which allows users to select elements of the
  plot, and \texttt{showSelected}, which displays only elements
  corresponding to the current selection. After using our novel
  declarative DSL to define an interactive animation in R code, it is
  rendered in a web browser using D3. We discuss the design of
  Animint, then compare to related libraries, and show several example
  visualizations of high-dimensional time series
  data.} % end of abstract

%% Keywords that describe your work. Will show as 'Index Terms' in journal
%% please capitalize first letter and insert punctuation after last keyword
\keywords{Information visualization, user interfaces, toolkits, 2D
  graphics, interactive, animation}

%% ACM Computing Classification System (CCS). 
%% See <http://www.acm.org/class/1998/> for details.
%% The ``\CCScat'' command takes four arguments.

\CCScatlist{ % not used in journal version
 \CCScat{K.6.1}{Management of Computing and Information Systems}%
{Project and People Management}{Life Cycle};
 \CCScat{K.7.m}{The Computing Profession}{Miscellaneous}{Ethics}
}

%% Uncomment below to include a teaser figure.
  \teaser{
  \centering
  \includegraphics[width=\textwidth]{figure-1}
  \caption{Interactive animation of World Bank data
    built with Animint (\url{http://bit.ly/1fzfUdN}). \textbf{Top}:  
    There are 5 geometric elements across
    2 plots linked using the clickSelects and showSelected aesthetics
    . \textbf{Left}: a multiple time
    series from 1960 to 2012 of the life expectancy of 205 countries,
    with a bold line indicating the selected country and a vertical
    grey tallrect indicating the selected year.  \textbf{Right}: a
    scatterplot of life expectancy versus fertility rate of all
    countries. The two text elements indicate the current selection:
    ``year = 1996'' and ``United States.''}
}

%% Uncomment below to disable the manuscript note
%\renewcommand{\manuscriptnotetxt}{}

%% Copyright space is enabled by default as required by guidelines.
%% It is disabled by the 'review' option or via the following command:
% \nocopyrightspace

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%% START OF THE PAPER %%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}

%% The ``\maketitle'' command must be the first command after the
%% ``\begin{document}'' command. It prepares and prints the title block.

%% the only exception to this rule is the \firstsection command
\firstsection{Introduction}

\maketitle

TODO: definition of interactive, which \citet{cleveland} calls
``direct manipulation.''

TODO: definition of brushing \citep{cleveland}. Three modes: transient
(data under brush = selection), lasting (data under brush are added to
the selection), or erasing (data under brush are removed from the
selection). Operations: labeling (show text near selection), enhanced
linking (change the symbol used to plot the selection) deletion
(e.g. outliers).

TODO: definition of animation. Changes over time based on data.

TODO: examples of animated and interactive, WorldBank and Fig 9 of
\citet{d3}.

TODO: discussion of related JavaScript libraries, i.e. highcharts, d3, vega.

\citet{animated-transitions} studied what kinds of animated
transitions are good at accurately communicating information.

\citet{declarative} studied the benefits of declarative languages for
data visualization. One of the main benefits is optimization: ``By
decoupling specification from implementation, developers can implement
language optimizations without interfering with the work of
designers.'' They proposed a declarative syntax for animated
transitions.

TODO: comparison with library(animation)!

TODO: One of the main reasons for the success of D3 is that it allows
visualizations to be specified using the terminology of the Document
Object Model \citep{d3}, which makes learning D3 easy for web
developers. Similarly, using the ggplot2 syntax makes d3 graphics easy for R developers. 

%% \section{Introduction} %for journal use above \firstsection{..} instead

\section{Related Work}


\section{Exposition}

In this section we explain the main idea of the Animint grammar for
interactive animations. We use the WorldBank example of Figure~1 as a
motivating example.

<<opts, echo=FALSE, message=FALSE>>=
library(animint)
data(WorldBank)
write.csv(WorldBank, "WorldBank.csv")
opts_chunk$set(tidy=FALSE, eval=FALSE)
@ 

<<yearRects-geom>>=
yearRects <- geom_tallrect(
  aes(xmin=year-1/2, xmax=year+1/2, 
      clickSelects=year),
  data=years, alpha=1/2)
@ 
<<yearRects-make>>=
yearRects <- make_tallrect(WorldBank, "year")
@ 

<<timeSeries>>=
timeSeries <- ggplot()+
  yearRects+
  geom_line(
    aes(x=year, y=life.expectancy, 
        group=country, colour=region,
        clickSelects=country),
    data=WorldBank, size=3, alpha=3/5)
@ 

<<yearText-geom>>=
yearText <- geom_text(
  aes(label=year, showSelected=year),
  x=5, y=80, 
  data=years)
@ 

<<yearText-make>>=
yearText <- make_text(WorldBank, 5, 80, "year")
@ 

<<scatterPlot>>=
scatterPlot <- ggplot()+
  yearText+
  geom_point(
    aes(x=fertility.rate, y=life.expectancy, 
        colour=region, size=population,
        clickSelects=country, 
        showSelected=year),
    data=WorldBank)+
  geom_text(
    aes(x=fertility.rate, y=life.expectancy, 
        label=country,
        showSelected=country, 
        showSelected2=year),
    data=WorldBank)+
  scale_size_animint(
    pixel.range=c(2, 20), 
    breaks=10^(4:9))
@ 

<<gg2animint>>=
viz <- 
  list(scatter=scatterPlot,
       ts=timeSeries,
       time=list(variable="year",ms=3000),
       duration=list(year=1000))
gg2animint(viz, out.dir="WorldBank")
@ 


\section{Comparison}

In this section we offer a comparison between Animint and several
related packages (Table~\ref{tab:packages}). The main difference is
that Animint's declarative syntax allows interactive animations to be
expressed in fewer lines of code than the other packages.

\subsection{D3}

The current implementation of Animint uses D3 to render interactive
animations in a web browser \citep{d3}. D3 is more expressive than
animint, but is also more verbose (TODO: COMPARISON FIGURE).

\subsection{R package animation}

One way to achieve animation in an iterative programming syntax is by
using a for statement to loop over the time variable. This is the main
idea of the animation package \citep{animation}. TODO: comparison
figure.

\subsection{Vega, ggplot2, ggvis}

In this section we describe the differences between Animint and
several other high-level DSLs for data visualization: Vega, ggplot2,
and ggvis.

Like Animint, Vega is a declarative DSL that builds on top of D3
\citep{vega}. Both sacrifice some of the power of D3, while still
allowing a wide variety of plots to be defined in fewer lines of code
than pure D3. The main idea of Vega is the declaratively define a
visualization using a special type of JavaScript Object Notation
(JSON) file. Animint also internally uses a JSON file to store
meta-data about an interactive animation (see section~TODO).

There are two main differences between Vega and Animint. First, the
Animint user writes R code, but the Vega user writes a JSON
file. Second and more importantly, Vega does not currently support
interactive animations. However, it should be possible for Vega to
support interactive animations in the future, by adding expanding
their JSON file format definition to support clickSelects and
showSelected mark proporties.

The current implementation of Animint extends the declarative DSL of
ggplot2 \citep{ggplot2}. Strictly speaking, ggplot2 is for
non-interactive and non-animated visualizations.

The authors of ggplot2 are currently working on ggvis, a package for
interactive graphics \citep{ggvis}. The main difference between
Animint and ggvis is the central unit of a visualization. In ggvis the
main unit is a single plot, but in Animint it is a list of several
plots which are linked using the clickSelects and showSelected
aesthetics.

\begin{table}
%% Table captions on top in journal version
  \caption{Comparison of graphics packages that can achieve 
    interactive animations. We show the language and number of lines of code 
    to implement the WorldBank visualization shown in Figure 1.}
 \label{tab:packages}
 \scriptsize
 \begin{center}
  \begin{tabular}{cccccc}
    Package & years & interaction vars & 
    %programming &
    language & lines \\
    \hline
    tcltk & 1991- & several & 
    %object &
    & 100s \\
    animation & 2007- & 1 = time & 
    %imperative &
    R & 40 \\
    D3 & 2011- & several & 
    %declarative & 
    JavaScript &TODO \\
    shiny & 2012- & several & 
    %reactive & 
    R & 60 \\
    animint & 2013- & several & 
    %declarative & 
    R& 20 
  \end{tabular}
 \end{center}
\end{table}

\section{Example applications}

\subsection{Animated examples}

Mostly useful when one of the variables is time.

\subsection{Non-animated examples}

TODO

\section{User feedback and observations}

We and our users have created interactive visualizations using Animint
that would be too complex to implement in other systems. Examples
discussed in previous sections include animated visualizations of
multiple time series data and non-animated visualizations of other
high-dimensional data sets. In this section we share comments and
constructive criticism that we have obtained from our users.

For the \texttt{prior} data visualization
(\url{http://bit.ly/1peIT7t}), the Animint user is a machine learning
researcher who developed an algorithm and applied it to 4 benchmark
data sets. He wanted to explore how his algorithm performed, in
comparison to a baseline learning algorithm. He appreciated the
intuitive understanding of the data that he gained using the
interactive plots: ``Interactive plotting allows us to explore all
relationships of our high-dimensional dataset and gives us an
intuitive understanding of the performance of our proposed
algorithm. An intuitive understanding of the results is important
since it shows under which conditions our proposed method works well
and provides avenues for further research.''

Users also appreciated the value of the web-based output format, and
the detail that is possible to show in interactive plots, but
impossible to show in publications: ``...  the web interface is simple
and easy to use.  It also enables us to publish more detailed
interactive results on our website to accompany the results presented
in publications.''


\begin{figure*}
  \centering
  \includegraphics[width=\textwidth]{figure-tornado}
  \caption{Interactive animation of Tornado data built with Animint
    (TODO:BITLY). \textbf{Left}: map of the United States with tornado
    paths in 1982. The state of Texas is selected and drawn darker
    than the others. \textbf{Right}: time series of tornado counts in
    Texas. The bar for 1982 is selected, and the text (119) shows the
    number of tornadoes in Texas that year.}
  \label{fig:tornado}
\end{figure*}

\begin{figure*}
  \centering
  \includegraphics[width=\textwidth]{figure-climate}
  \caption{Visualization containing 6 linked, interactive, animated
    plots of Central American climate data built with Animint
    (TODO:BITLY). \textbf{Top}: for the selected time (December 1997),
    maps displaying the spatial distribution of two temperature
    variables, and a scatterplot of these two variables. The selected
    region is displayed with a black outline. \textbf{Bottom}: time
    series of the two temperature variables with the selected region
    shown in violet, and a scatterplot of all times for that region.}
  \label{fig:climate}
\end{figure*}

\begin{table}
  \centering
  \input{table-examples}
  \caption{animint examples. Abbreviations: vars=plotted variables,
    int=interactive variables, anim=animated, LOC=lines of R code including data processing but not including comments, 80 characters max per
    line.
  }
\label{tab:examples}
\end{table}

\begin{figure}
  \centering
TODO: code for D3, shiny...?
  \caption{Comparison of code for the WorldBank visualization.}
\label{fig:compare}
\end{figure}

\begin{figure}
  \centering
  TODO: flow chart explaining structure of Animint list of several
ggplots, JSON file, CSV files, etc.
  \caption{Design of animint.}
  \label{fig:design}
\end{figure}

\section{Limitations and future work}

There are several limitations to the current implementation of
Animint.

As discussed in Section~TODO, the compiler is written in R, and the
renderer is written in JavaScript. This means that Animint developers
must be proficient in both R and JavaScript. This represents a
significant barrier for source code contributions from developers who
are proficient with one language but not the other.

Animint users define interactive animations using only R code, and no
knowledge of JavaScript is necessary. This is convenient for useRs
from a statistical background, but presents a barrier for web
developers who are more familiar with JavaScript than R. For these web
developers, it would be advantageous to have a pure-JavaScript
implementation of the compiler and renderer, by possibly building
clickSelects and showSelected extensions into Vega \citep{vega}.

Types of interactivity: only showing and hiding data subsets.

Performance.

\acknowledgments{The authors wish to thank Animint users MC Du
  Plessis, Song Liu, and Nikoleta Juretic who have contributed
  constructive criticism and helped its development.  }

% TDH 13 March 2014 This was in the template.tex file.
%\bibliographystyle{abbrv}

\bibliographystyle{abbrvnat}

%%use following if all content of bibtex file should be shown
%\nocite{*}
\bibliography{refs}
\end{document}
